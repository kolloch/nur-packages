name: niv-update

on:
  push:
  schedule:
    - cron: '37 10-17 * * *'

jobs:
  niv-update:
    runs-on: ubuntu-latest
    env:
      sources: nixpkgs nix-test-runner crate2nix
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v8
      - name: Update Nix trusted users
        run: |
          echo "trusted-users = root travis" | {
            sudo tee -a /etc/nix/nix.conf && sudo pkill nix-daemon
          }
      - uses: cachix/cachix-action@v6
        with:
          name: eigenvalue
          signingKey: '${{ secrets.CACHING_SIGNING_KEY }}'
      - run: nix-env -iA nixpkgs.niv
      - run: nix-env -if . -A crate2nix
      - name: Update each source and push changes
        run: |
          failed=""

          for source in $sources; do
            git fetch origin master
            git reset --hard origin/master
            niv update $source
            if test -n "$(git status --porcelain)"; then
              (
                set -x
                git --no-pager diff HEAD
                git config --local user.email 'info@eigenvalue.net'
                git config --local user.name 'Peter Kolloch, Bot'
                n=0
                until [ $n -ge 5 ]
                do
                  (
                    cd pkgs/rust/generated
                    crate2nix generate
                  ) || {
                    echo "Regenerating Cargo.nix failed."
                    failed="$failed $source"
                    break
                  }
                  git commit -m "niv update: updated $source" -a

                  nix build -f . -L buildPkgs || {
                    echo "Building packages failed. Skip updating $source."
                    failed="$failed $source"
                    break
                  }
                  git push && break
                  n=$[$n+1]
                  sleep 1
                  # Another try
                  git fetch
                  git reset --hard origin/master
                  niv update $source
                done
                if [ $n -ge 5 ]; then
                  echo "gave up after 5 tries"
                  exit 1
                fi
              )
            else
              echo "no change for $source"
            fi
          done

          if [ -n "$failed" ]; then
            echo "The following sources couldn't be updated "
            echo "because of test failures:"
            echo "$failed"
            exit 3
          fi